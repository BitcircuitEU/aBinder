name: Release Build

on:
  push:
    branches:
      - main

# Add permissions block
permissions:
  contents: write
  packages: write
  
jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Read version
      id: version
      shell: pwsh
      run: |
        $version = Get-Content VERSION.md -Raw
        $version = $version.Trim()
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Version found: $version"
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.8.1'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2022_64'
        tools: 'tools_cmake'
        modules: 'qtwebsockets qtnetworkauth'
        
    - name: Install OpenSSL
      shell: pwsh
      run: |
        choco install openssl -y
        echo "OPENSSL_ROOT_DIR=C:/Program Files/OpenSSL" >> $env:GITHUB_ENV
        echo "OPENSSL_LIBRARIES=C:/Program Files/OpenSSL/lib" >> $env:GITHUB_ENV
        
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
        
    - name: Create Build Directory
      run: mkdir client/build
      
    - name: Configure CMake
      working-directory: client/build
      shell: pwsh
      run: |
        echo "Qt6_DIR: $env:Qt6_DIR"
        cmake .. -DCMAKE_BUILD_TYPE=Release -DOPENSSL_ROOT_DIR="$env:OPENSSL_ROOT_DIR" -DOPENSSL_LIBRARIES="$env:OPENSSL_LIBRARIES"
      
    - name: Build
      working-directory: client/build
      run: cmake --build . --config Release
      
    - name: Copy Dependencies
      working-directory: client/build/Release
      shell: pwsh
      run: |
        # Set Qt bin to PATH for windeployqt
        $Env:PATH = "$env:Qt6_DIR\bin;$Env:PATH"
        
        # Copy OpenSSL DLLs
        Copy-Item "C:/Program Files/OpenSSL/bin/libssl-3-x64.dll" .
        Copy-Item "C:/Program Files/OpenSSL/bin/libcrypto-3-x64.dll" .
        
        # Run windeployqt
        windeployqt.exe --release --no-translations --no-system-d3d-compiler --no-opengl-sw aBinder.exe
        
        # Create ZIP file with version number
        $version = Get-Content ../../../VERSION.md -Raw
        $version = $version.Trim()
        Compress-Archive -Path * -DestinationPath "../aBinder_$version.zip" -Force
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: aBinder v${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: client/build/aBinder_${{ steps.version.outputs.version }}.zip
        asset_name: aBinder_${{ steps.version.outputs.version }}.zip
        asset_content_type: application/zip 